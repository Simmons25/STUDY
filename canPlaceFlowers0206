Q:

假设你有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花卉不能种植在相邻的地块上，它们会争夺水源，两者都会死去。

给定一个花坛（表示为一个数组包含0和1，其中0表示没种植花，1表示种植了花），和一个数 n 。能否在不打破种植规则的情况下种入 n 朵花？能则返回True，不能则返回False。

示例 1:

输入: flowerbed = [1,0,0,0,1], n = 1
输出: True
示例 2:

输入: flowerbed = [1,0,0,0,1], n = 2
输出: False
注意:

数组内已种好的花不会违反种植规则。
输入的数组长度范围为 [1, 20000]。
n 是非负整数，且不会超过输入数组的大小

S:

bool canPlaceFlowers(int* flowerbed, int flowerbedSize, int n){
    int new[200001]={0};
    int k=0;
    for(int i=1;i<flowerbedSize+1;i++)
    {
        new[i]=flowerbed[i-1];
    }
    for(int i=1;i<flowerbedSize+1;i++)
    {
        if(new[i]==0&&new[i-1]==0&&new[i+1]==0)
        {
            k=k+1;
            new[i]=1;
        }

    }
if(k>=n)
return true;
else
return false;
}


NOTE:
1.在寻找可以的位置时，在找到后要注意把合适的变成1.否则会重复找到，不符合题意。
