Q：

给定一个包含 0, 1, 2, ..., n 中 n 个数的序列，找出 0 .. n 中没有出现在序列中的那个数。

示例 1:

输入: [3,0,1]
输出: 2
示例 2:

输入: [9,6,4,2,3,5,7,0,1]
输出: 8

S:

int compare(const void*a,const void*b)
{
    int *p1=(int *)a;
    int *p2=(int*)b;
    return *p1-*p2;
}
int missingNumber(int* nums, int numsSize){
qsort(nums,numsSize,sizeof(int),compare);
int k=0;
int w=0;
if(numsSize==1&&nums[0]==0)
k=1;
else if(numsSize==1&&nums[0]==1)
k=0;
else if(numsSize==2&&nums[1]==1&&nums[0]==0)
k=2;
else if(numsSize==2&&nums[1]==2&&nums[0]==0)
k=1;
else if(numsSize==2&&nums[0]==1&&nums[1]==2)
k=0;
else
{

for(int i=0;i<numsSize-1;i++)
{
    if(nums[i+1]-nums[i]>1)
    {k=nums[i]+1;
    w=1;
    break;}

}if(w!=1)
{   if(nums[0]==0)
    k=nums[numsSize-1]+1;
    else
    k=0;
}
}
return k;
}

NOTE:
1.思路是先排序再遍历数组，当有相邻的元素相差大于1时就返回前一项加一，但这样没有考虑到只有一个元素的情况，和缺少收尾的情况，所以在只有一个元素和收尾的情况做
了修正。
2.查看题解思路，发现可以用遍历数组，看哪一个的数字与编号不对应，或全部对应就输出数组长度的方式。
