Q:
给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。

函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。

说明:

返回的下标值（index1 和 index2）不是从零开始的。
你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。
示例:

输入: numbers = [2, 7, 11, 15], target = 9
输出: [1,2]
解释: 2 与 7 之和等于目标数 9 。因此 index1 = 1, index2 = 2 。

S:
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* twoSum(int* numbers, int numbersSize, int target, int* returnSize){
    int *res=(int*)malloc(sizeof(int)*2);
    *returnSize=2;
    int w=0;
    for(int i=0;i<numbersSize-1;i++)
    for(int j=i+1;j<numbersSize;j++)
    {
        if(numbers[i]+numbers[j]==target)
        {
            res[0]=i+1;
            res[1]=j+1;
            w=1;
            break;
        }
        if(w==1)
        break;

    }
return res;
}

NOTE:
1.此题对时间的要求较高，在找到答案后，要及时跳出循环，而break只能跳出第一层循环，要再加一个判断再次跳出。
2.要对returnsize赋值。
